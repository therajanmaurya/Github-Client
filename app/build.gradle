apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "opensource.github.android.client"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def daggerCompiler = "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"

    // App's dependencies, including test and Dependency for Google Sign-In
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    // Square dependencies
    compile('com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion') {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.okHttp3Version"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttp3Version"

    // Rx dependencies
    compile "io.reactivex:rxandroid:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxjava:$rootProject.rxandroidVersion"

    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    apt daggerCompiler
    testApt daggerCompiler
    androidTestApt daggerCompiler

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.rulesVersion"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$rootProject.hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-library:$rootProject.hamcrestVersion"
    testCompile "org.hamcrest:hamcrest-integration:$rootProject.hamcrestVersion"
    testCompile 'org.robolectric:robolectric:3.1'
}


// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

/*
    Resolves dependency versions across test and production APKs, specifically, transitive
    dependencies. This is required since Espresso internally has a dependency on support-annotations.
    */
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:23.1.1"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
